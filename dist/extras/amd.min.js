!function(t){const e=System.constructor.prototype,n=[[],function(){return{}}];function r(){throw new Error("AMD require not supported.")}function o(){}const s=["require","exports","module"];function f(t,e){const n={},o={exports:n},s=[],f=[];let i=0;for(let e=0;e<t.length;e++){const c=t[e],u=f.length;if("require"===c)s[e]=r,i++;else if("module"===c)s[e]=o,i++;else if("exports"===c)s[e]=n,i++;else{const t=e;f.push(function(e){s[t]=e.default})}i&&(t[u]=c)}i&&(t.length-=i);const c=e;return[t,function(t){return t("default",n),{setters:f,execute:function(){o.exports=c.apply(n,s)||o.exports,n!==o.exports&&t("default",o.exports)}}}]}let i;const c=e.register;3===c.length?e.register=function(t,e,n){"string"!=typeof t&&(i=e),c.apply(this,arguments)}:e.register=function(t,e){i=e,c.apply(this,arguments)};const u=e.getRegister;let g,y;e.getRegister=function(){const t=u.call(this);if(t&&t[1]===i)return t;if(!g)return t||n;const e=f(g,y);return g=null,e},t.define=function(t,e,n){if("string"==typeof t){if(g){if(!System.registerRegistry)throw new Error("Include the named register extension named AMD support in SystemJS.");return System.registerRegistry[t]=f(e,n),g=[],void(y=o)}System.registerRegistry&&(System.registerRegistry[t]=f(e,n)),t=e,e=n}t instanceof Array?(g=t,y=e):"object"==typeof t?(g=[],y=function(){return t}):"function"==typeof t&&(g=s,y=t)},t.define.amd={}}("undefined"!=typeof self?self:global);