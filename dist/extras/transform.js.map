{"version":3,"file":"transform.js","sources":["../../node_modules/rollup-plugin-node-builtins/src/es6/path.js","../../src/utils/formats.js","../../src/extras/transform.js"],"sourcesContent":["// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexport function resolve() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : '/';\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexport function normalize(path) {\n  var isPathAbsolute = isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isPathAbsolute).join('/');\n\n  if (!path && !isPathAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isPathAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexport function isAbsolute(path) {\n  return path.charAt(0) === '/';\n}\n\n// posix version\nexport function join() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n}\n\n\n// path.relative(from, to)\n// posix version\nexport function relative(from, to) {\n  from = resolve(from).substr(1);\n  to = resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n}\n\nexport var sep = '/';\nexport var delimiter = ':';\n\nexport function dirname(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n}\n\nexport function basename(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n}\n\n\nexport function extname(path) {\n  return splitPath(path)[3];\n}\nexport default {\n  extname: extname,\n  basename: basename,\n  dirname: dirname,\n  sep: sep,\n  delimiter: delimiter,\n  relative: relative,\n  join: join,\n  isAbsolute: isAbsolute,\n  normalize: normalize,\n  resolve: resolve\n};\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b' ?\n    function (str, start, len) { return str.substr(start, len) } :\n    function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","import path from 'path';\n\n\n// RegEx adjusted from https://github.com/jbrantly/yabble/blob/master/lib/yabble.js#L339\nconst cjsRequireRegEx = /(?:^\\uFEFF?|[^$_a-zA-Z\\xA0-\\uFFFF.\"'])require\\s*\\(\\s*(\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\"|'[^'\\\\]*(?:\\\\.[^'\\\\]*)*'|`[^`\\\\]*(?:\\\\.[^`\\\\]*)*`)\\s*\\)/g\n\n// require('...') || exports[''] = ... || exports.asd = ... || module.exports = ...\nconst cjsExportsRegEx = /(?:^\\uFEFF?|[^$_a-zA-Z\\xA0-\\uFFFF.])(exports\\s*(\\[['\"]|\\.)|module(\\.exports|\\['exports'\\]|\\[\"exports\"\\])\\s*(\\[['\"]|[=,\\.]))/;\n\nconst cjsFileDirRegEx = /__filename|__dirname]/;\n\n// good enough ES6 module detection regex - format detections not designed to be accurate, but to handle the 99% use case\nconst esmRegEx = /(^\\s*|[}\\);\\n]\\s*)(import\\s*(['\"]|(\\*\\s+as\\s+)?(?!type)([^\"'\\(\\)\\n; ]+)\\s*from\\s*['\"]|\\{)|export\\s+\\*\\s+from\\s+[\"']|export\\s*(\\{|default|function|class|var|const|let|async\\s+function))/;\n\n// used to support leading #!/usr/bin/env in scripts as supported in Node\nconst hashBangRegEx = /^\\#\\!.*/;\n\n\n// AMD Module Format Detection RegEx\n// define([.., .., ..], ...)\n// define(varName); || define(function(require, exports) {}); || define({})\nconst amdRegEx = /(?:^\\uFEFF?|[^$_a-zA-Z\\xA0-\\uFFFF.])define\\s*\\(\\s*(\"[^\"]+\"\\s*,\\s*|'[^']+'\\s*,\\s*)?\\s*(\\[(\\s*((\"[^\"]+\"|'[^']+')\\s*,|\\/\\/.*\\r?\\n|\\/\\*(.|\\s)*?\\*\\/))*(\\s*(\"[^\"]+\"|'[^']+')\\s*,?)?(\\s*(\\/\\/.*\\r?\\n|\\/\\*(.|\\s)*?\\*\\/))*\\s*\\]|function\\s*|{|[_$a-zA-Z\\xA0-\\uFFFF][_$a-zA-Z0-9\\xA0-\\uFFFF]*\\))/;\nfunction detectAmdFormat(source) {\n  return amdRegEx.test(source);\n}\n\nconst leadingCommentAndMetaRegEx = /^(\\s*\\/\\*[^\\*]*(\\*(?!\\/)[^\\*]*)*\\*\\/|\\s*\\/\\/[^\\n]*|\\s*\"[^\"]+\"\\s*;?|\\s*'[^']+'\\s*;?)*\\s*/;\n\nfunction detectRegisterFormat(source) {\n  const leadingCommentAndMeta = source.match(leadingCommentAndMetaRegEx);\n\n  if (!leadingCommentAndMeta) {\n    return false;\n  }\n\n  const codeStart = leadingCommentAndMeta[0].length;\n  return source.substr(codeStart, 17) === 'SystemJS.register' || source.substr(codeStart, 15) === 'System.register';\n}\n\n\nexport function detectFormat(url, source) {\n  url = new URL(url);\n  const ext = path.extname(url.pathname);\n  let format = null;\n\n  if (ext === '.mjs') {\n    format = 'esm';\n  } else if (ext === '.json') {\n    format = 'json';\n  } else if (ext === '.js') {\n    format = 'cjs';\n  } else if (url.protocol === 'builtin:') {\n    return 'builtin';\n  }\n\n  if (source) {\n    source = source.replace(hashBangRegEx, '');\n\n    if (source.trim().length === 0) {\n      return format;\n    }\n\n    if (ext === '.js') {\n      if (cjsRequireRegEx.test(source) || cjsExportsRegEx.test(source) || cjsFileDirRegEx.test(source)) {\n        format = 'cjs';\n      }\n\n      if (esmRegEx.test(source)) {\n        format = 'esm';\n      }\n\n      if (detectRegisterFormat(source)) {\n        format = 'register';\n      }\n\n      if (detectAmdFormat(source)) {\n        format = 'amd';\n      }\n    }\n  }\n\n  return format;\n}\n","import { detectFormat} from '../utils/formats';\n\n/*\n * Support for a \"transform\" loader interface\n */\nconst systemJSPrototype = System.constructor.prototype;\n\nconst resolve = systemJSPrototype.resolve;\nsystemJSPrototype.resolve = function(url, parent) {\n  return resolve.call(this, url, parent);\n};\n\nconst instantiate = systemJSPrototype.instantiate;\nsystemJSPrototype.instantiate = function (url, parent) {\n  if (url.slice(-5) === '.wasm') {\n    return instantiate.call(this, url, parent);\n  }\n\n  const context = { parent };\n\n  return this.fetch(context, url)\n    .catch(({ code, message }) => {\n      throw new Error(`Fetch error: ${code} ${message}${parent ? ` loading from ${parent}` : ''}`);\n    })\n    .then(source => this.detectFormat(context, url, source))\n    .then(source => {\n      if (this.transform.length === 3) {\n        return this.transform(context, url, source);\n      }\n      return this.transform(url, source);\n    })\n    .then(source => this.evaluate(context, url, source))\n    .then(registration => registration || this.getRegister());\n};\n\n\n// Hookable fetch function\nsystemJSPrototype.fetch = function(context, url) {\n  const options = {\n    credentials: 'same-origin',\n  };\n\n  return fetch(url, options).then(function (res) {\n    if (res.ok) {\n      return res.text();\n    }\n\n    throw {\n      url,\n      code: res.status,\n      message: res.statusText,\n    };\n  }).catch(function(err) {\n    throw err;\n  });\n};\n\n\n// Hookable file format detection\nsystemJSPrototype.detectFormat = function(context, url, source) {\n  context.format = detectFormat(url, source);\n  return source;\n};\n\n\n// Hookable transform function!\nsystemJSPrototype.transform = function(context, url, source) {\n  return source;\n};\n\n// Hookable evaluate function\nsystemJSPrototype.evaluate = function(context, url, source) {\n  try {\n    const wrapped = `${source}\\n//# sourceURL=${url}`;\n    (0, eval)(wrapped);\n  } catch (err) {\n    throw err;\n  }\n};\n"],"names":["normalizeArray","parts","allowAboveRoot","up","i","length","last","splice","unshift","splitPathRe","splitPath","filename","exec","slice","resolve","resolvedPath","resolvedAbsolute","arguments","path","TypeError","charAt","filter","split","p","join","normalize","isPathAbsolute","isAbsolute","trailingSlash","substr","paths","Array","prototype","call","index","relative","from","to","trim","arr","start","end","fromParts","toParts","Math","min","samePartsLength","outputParts","push","concat","sep","delimiter","dirname","result","root","dir","basename","ext","f","extname","xs","res","str","len","cjsRequireRegEx","cjsExportsRegEx","cjsFileDirRegEx","esmRegEx","hashBangRegEx","amdRegEx","detectAmdFormat","source","test","leadingCommentAndMetaRegEx","detectRegisterFormat","leadingCommentAndMeta","match","codeStart","detectFormat","url","URL","pathname","format","protocol","replace","systemJSPrototype","System","constructor","parent","instantiate","context","fetch","catch","code","message","Error","then","transform","evaluate","registration","getRegister","options","credentials","ok","text","status","statusText","err","wrapped","eval"],"mappings":"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"}